name: Build & Test with Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always
  GITHUB_TOKEN: ${{ github.token }}
  RUST_BACKTRACE: 1

jobs:
  build:
    name: ${{ matrix.platform.build_name }}
    runs-on: ${{ matrix.platform.os }}

    strategy:
      fail-fast: false
      matrix:
        platform:

          - build_name: Linux-x86_64-gnu
            os: ubuntu-20.04
            target: x86_64-unknown-linux-gnu

          - build_name: Linux-x86_64-musl
            os: ubuntu-20.04
            target: x86_64-unknown-linux-musl

          - build_name: Linux-aarch64-gnu
            os: ubuntu-20.04
            target: aarch64-unknown-linux-gnu

          - build_name: Linux-aarch64-musl
            os: ubuntu-20.04
            target: aarch64-unknown-linux-musl

          - build_name: Linux-armv7-gnu
            os: ubuntu-20.04
            target: armv7-unknown-linux-gnueabihf

          - build_name: Linux-arm-musl
            os: ubuntu-20.04
            target: arm-unknown-linux-musleabi

          - build_name: Linux-i686-gnu
            os: ubuntu-20.04
            target: i686-unknown-linux-gnu

          - build_name: Linux-i686-musl
            os: ubuntu-20.04
            target: i686-unknown-linux-musl

          - build_name: Linux-riscv64gc-gnu
            os: ubuntu-20.04
            target: riscv64gc-unknown-linux-gnu

          - build_name: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc

          - build_name: Windows-aarch64
            os: windows-latest
            target: aarch64-pc-windows-msvc

          - build_name: Windows-i686
            os: windows-latest
            target: i686-pc-windows-msvc
            
          - build_name: Darwin-x86_64
            os: macOS-latest
            target: x86_64-apple-darwin

          - build_name: Darwin-aarch64
            os: macOS-latest
            target: aarch64-apple-darwin

    steps:
      - uses: actions/checkout@v4
      
      - name: Cache cargo & target directories
        uses: Swatinem/rust-cache@v2
      
      - name: Install musl-tools on Linux
        run: sudo apt-get update --yes && sudo apt-get install --yes musl-tools
        if: contains(matrix.platform.target, 'musl')
      
      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: "build"
          target: ${{ matrix.platform.target }}
          toolchain: stable
          args: "--locked --release"
          strip: true
      
      - name: Run tests
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: "test"
          target: ${{ matrix.platform.target }}
          toolchain: stable
          args: "--locked --release"
        if: ${{ !matrix.platform.skip_tests }}
      
      - name: Package as archive
        shell: bash
        run: |
          cd target/${{ matrix.platform.target }}/release
          if [[ "${{ matrix.platform.os }}" == "windows-latest" ]]; then
            7z a ../../../nice-rust-${{ matrix.platform.build_name }}.zip nice-rust.exe
          else
            tar czvf ../../../nice-rust-${{ matrix.platform.build_name }}.tar.gz nice-rust
          fi
          cd -
      
      - name: Publish release artifacts
        uses: actions/upload-artifact@v3
        with:
          name: nice-rust-${{ matrix.platform.build_name }}
          path: "nice-rust-*"
